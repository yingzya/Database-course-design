<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.logistics.mapper.WuliuMapper">
    
    <resultMap type="Wuliu" id="WuliuResult">
        <result property="wuliuId"    column="wuliu_id"    />
        <result property="shopName"    column="shop_name"    />
        <result property="orderId"    column="order_id"    />
        <result property="dispatcherId"    column="dispatcher_id"    />
    </resultMap>

    <resultMap id="WuliuDispatcherResult" type="Wuliu" extends="WuliuResult">
        <collection property="dispatcherList" ofType="Dispatcher" column="wuliu_id" select="selectDispatcherList" />
    </resultMap>

    <resultMap type="Dispatcher" id="DispatcherResult">
        <result property="dispatcherId"    column="dispatcher_id"    />
        <result property="dispatcherName"    column="dispatcher_name"    />
        <result property="dispatcherPhone"    column="dispatcher_phone"    />
    </resultMap>

    <sql id="selectWuliuVo">
        select wuliu_id, shop_name, order_id, dispatcher_id from wuliu
    </sql>

    <select id="selectWuliuList" parameterType="Wuliu" resultMap="WuliuResult">
        <include refid="selectWuliuVo"/>
        <where>  
            <if test="shopName != null  and shopName != ''"> and shop_name like concat('%', #{shopName}, '%')</if>
            <if test="orderId != null "> and order_id = #{orderId}</if>
            <if test="dispatcherId != null  and dispatcherId != ''"> and dispatcher_id = #{dispatcherId}</if>
        </where>
    </select>
    
    <select id="selectWuliuByWuliuId" parameterType="String" resultMap="WuliuDispatcherResult">
        select wuliu_id, shop_name, order_id, dispatcher_id
        from wuliu
        where wuliu_id = #{wuliuId}
    </select>

    <select id="selectDispatcherList" resultMap="DispatcherResult">
        select dispatcher_id, dispatcher_name, dispatcher_phone
        from dispatcher
        where dispatcher_id = #{dispatcher_id}
    </select>

    <insert id="insertWuliu" parameterType="Wuliu">
        insert into wuliu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="wuliuId != null">wuliu_id,</if>
            <if test="shopName != null and shopName != ''">shop_name,</if>
            <if test="orderId != null">order_id,</if>
            <if test="dispatcherId != null and dispatcherId != ''">dispatcher_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="wuliuId != null">#{wuliuId},</if>
            <if test="shopName != null and shopName != ''">#{shopName},</if>
            <if test="orderId != null">#{orderId},</if>
            <if test="dispatcherId != null and dispatcherId != ''">#{dispatcherId},</if>
         </trim>
    </insert>

    <update id="updateWuliu" parameterType="Wuliu">
        update wuliu
        <trim prefix="SET" suffixOverrides=",">
            <if test="shopName != null and shopName != ''">shop_name = #{shopName},</if>
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="dispatcherId != null and dispatcherId != ''">dispatcher_id = #{dispatcherId},</if>
        </trim>
        where wuliu_id = #{wuliuId}
    </update>

    <delete id="deleteWuliuByWuliuId" parameterType="String">
        delete from wuliu where wuliu_id = #{wuliuId}
    </delete>

    <delete id="deleteWuliuByWuliuIds" parameterType="String">
        delete from wuliu where wuliu_id in 
        <foreach item="wuliuId" collection="array" open="(" separator="," close=")">
            #{wuliuId}
        </foreach>
    </delete>
    
    <delete id="deleteDispatcherByDispatcherIds" parameterType="String">
        delete from dispatcher where dispatcher_id in 
        <foreach item="dispatcherId" collection="array" open="(" separator="," close=")">
            #{dispatcherId}
        </foreach>
    </delete>

    <delete id="deleteDispatcherByDispatcherId" parameterType="String">
        delete from dispatcher where dispatcher_id = #{dispatcherId}
    </delete>

    <insert id="batchDispatcher">
        insert into dispatcher( dispatcher_id, dispatcher_name, dispatcher_phone) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.dispatcherId}, #{item.dispatcherName}, #{item.dispatcherPhone})
        </foreach>
    </insert>
</mapper>